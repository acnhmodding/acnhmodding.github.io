---
interface Props {
  label?: string
}

const { label, ...props } = Astro.props
---

<label class="ac-checkbox-wrapper">
  <input type="checkbox" class="ac-checkbox" {...props} />
  {label && <span class="ac-checkbox-label">{label}</span>}
</label>

<style>
  .ac-checkbox-wrapper {
    align-items: center;
    color: var(--sl-color-gray-3);
    cursor: pointer;
    display: inline-flex;
    font-family: var(--__sl-font);
    gap: 0.5rem;
    
    &:has(:disabled) {
      opacity: 0.4;
      pointer-events: none;
    }
  }

  .ac-checkbox {
    appearance: none;
    border-color: var(--sl-color-text);
    border-radius: 0.375rem;
    border-style: solid;
    border-width: 2px;
    cursor: inherit;
    height: 1.5rem;
    margin: 0;
    transition: all 0.3s ease-in-out;
    width: 1.5rem;

    &:hover {
      background-color: var(--sl-color-accent);
      border-color: var(--sl-color-accent-high);
    }

    &:hover + .ac-checkbox-label {
      color: var(--sl-color-accent-high);
    }

    &:checked {
      background-color: var(--sl-color-accent);
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' viewBox='0 0 24 24'%3E%3Cpath d='M7 13L10 16L17 9' stroke='%23FFFFFF' stroke-width='2.5' stroke-linecap='round' stroke-linejoin='round'%3E%3C/path%3E%3C/svg%3E");
      background-position: center;
      background-size: 1.25rem;
      border-color: var(--sl-color-accent);
    }

    &:checked:hover {
      border-color: var(--sl-color-accent-high);
      background-color: var(--sl-color-accent-high);
    }

    &:checked + .ac-checkbox-label {
      color: var(--sl-color-text);
    }

    &:checked:hover + .ac-checkbox-label {
      color: var(--sl-color-accent-high);
    }

    &:active {
      border-color: var(--sl-color-accent);
    }
  }

  .ac-checkbox-label {
    transition: color 0.3s ease-in-out;
  }
</style>